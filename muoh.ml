let flute = Y {name = "flute"; data = Art {adescL = "A little wooden flute is lying here."; adescI = "This wooden flute has seen better days, but it still plays."; luse = (fun () -> if haselement "wizard" ((here ()).lcres) && not (checkquest "get tip") then let _ = goldchange 20 in let _ = completequest "get tip" in "The wizard likes your song and gives you a 20 gp tip." else "You play a little ditty, but no one is impressed.")}};;


let cball = Y {name = "summon crystal ball"; data = Spe {sdesc = "Makes an explosive crystal ball appear in your hand which you can then throw at your enemies."; sncombat = (fun () -> "This spell has no use outside of combat."); scombat = Damage 4}};;
let curse = Y {name = "curse"; data = Spe {sdesc = "This spell just puts a little magic here and there. It makes it look like a real curse while you get away to the plaza."; sncombat = (fun () -> let _ = currentloc := "plaza" in "You escape to the plaza."); scombat = Flee}};; (*need to make it go to plaza*)
let lfire = Y {name = "liquid fire"; data = Spe {sdesc = "This shoots a small amount of liquid fire (lava) at your opponent."; sncombat = (fun () -> "This spell has no use outside of combat."); scombat = Damage 7}};;
let dolittle = Y {name = "dolittle"; data = Spe {sdesc = "You can talk to animals with this spell."; sncombat = (fun () -> if (currentloc.contents) = "forest" then let _ = addlink2 "forest" "thief corner" in "A squirrel tells you where the thief corner is." else if (currentloc.contents) = "tree" then "A bird tells you that the wizard is a sucker for music." else if (currentloc.contents) = "thief corner" && not (checkquest "get flute") then let _ = completequest "get flute" in let _ = addtoinv flute in "A pack rat brings you a flute." else "There are no animals to talk to here."); scombat = Noncombat}};;
let swave = Y {name = "sound wave"; data = Spe {sdesc = "This creates a high pitched screech which makes your enemies bleed from the ears."; sncombat = (fun () -> "This spell has no use outside of combat."); scombat = Damage 15}};;


let fruit = Y {name = "fruit"; data = Art {adescL = "A single luscious fruit hangs from a branch."; adescI = "This delicious looking fruit is said to have magical properties."; luse = (fun () -> if haselement "innkeeper" ((here ()).lcres) then let _ = addlink2 "inn" "room" in let _ = deleteinv "fruit" in let _ = changetalk "inn" "innkeeper" (fun () -> "Your room is open.") in "You give the fruit to the innkeeper and he opens up the room." else "The fruit smells very tempting, but you decide to save it for something important.")}};;
let soap = Y {name = "soap"; data = Art {adescL = "There is even a bar of soap in the washroom."; adescI = "This bar of soap smells clean."; luse = (fun () -> if haselement "thief" ((here ()).lcres) then let _ = changecdesc "thief corner" "thief" "A short, gruff-looking, thief looks meekly around and avoids looking you in the eyes." in let _ = completequest "thieves" in let _ = deleteinv "soap" in let _ = changetalk "thief corner" "thief" (fun () -> "Have a nice day, sir.") in "You shove the bar of soap in the mouth of the thief, his cheeks go red with embarrasment." else "You take a nibble of the soap: tastes like a mountain spring!")}};;
let book = Y {name = "book"; data = Art {adescL = "One of those books that are always in inns sits on the bedside table."; adescI = "This book looks interesting."; luse = (fun () -> let _ = addspell curse in let _ = deleteinv "book" in "You learn the curse spell.")}};;
let goose = Y {name = "goose"; data = Art {adescL = "There is a christmas goose here."; adescI = "This christmas goose looks delicious."; luse = (fun () -> if haselement "dwarves" ((here ()).lcres) then let _ = addlink2 "garden" "tree" in let _ = deleteinv "goose" in let _ = changetalk "garden" "dwarves" (fun () -> "Thanks for the grub! Visit the tree whenever you want.") in let _ = changecdesc "garden" "dwarves" "Two friendly and satisfied dwarves guard the path to a mystical tree." in "The dwarves are grateful and let you past them." else "Do not use the goose here!")}};;
let hpill = Y {name = "pill"; data = Art {adescL = "There is a healing pill here."; adescI = "This healing pill restores 1 hp."; luse = (fun () -> if hpchange 1 then let _ = deleteinv "pill" in "The healing pill restores 1 hp." else "You are already at max health.")}};;
let shield = Y {name = "shield"; data = Art {adescL = "There is a magical shield here."; adescI = "This shield has a blue pentagram on it which reflects spells cast at anyone using it."; luse = (fun () -> let _ = addplayprop Reflect in "You strap the shield on your arm.")}};;
let scythe = Y {name = "scythe"; data = Art {adescL = "The scythe of death lies here."; adescI = "You jacked this scythe from death."; luse = (fun () -> let _ = addplayweapon "Slash with scythe" 8 in "You ready your scythe.")}};;
let guilt = Y {name = "guilt"; data = Art {adescL = "There is guilt here."; adescI = "This is the guilt you carry with you for killing the damsel. You monster."; luse = (fun () -> "You feel the urge to cry")}};;
let hanky = Y {name = "hanky"; data = Art {adescL = "There is a hanky here."; adescI = "This hanky belongs to the damsel."; luse = (fun () -> if checkinv "guilt" then let _ = deleteinv "guilt" in let _ = completequest "damsel" in "You cry into the hanky. You feel your guilt wash away." else if haselement "damsel" ((here ()).lcres) then let _ = deleteinv "hanky" in let _ = changetalk "wizard quad" "damsel" (fun () -> String.concat " " ["Thanks for my hanky."; if checkquest "wizards" then "You're my hero for taking care of that lecher. I love you." else "Please teach that dirty old man a lesson for me."]) in let _ = changecdesc "wizard quad" "damsel" "A damsel cries into her hanky." in let _ = completequest "damsel" in "The damsel takes her hanky and thanks you." else "You have no use for the hanky.")}};;
let net = Y {name = "net"; data = Art {adescL = "There is a butterfly net here."; adescI = "This butterfly net looks like it might be useful."; luse = (fun () -> if haselement "flying hanky" ((here ()).larts) then let _ = addtoinv hanky in let _ = deleteinv "net" in let _ = goldchange 5 in let _ = delart "flying hanky" (currentloc.contents) in "You catch the hanky with the net, but you break your net. You also find 5 gp when running around in the grass." else "The fruit smells very tempting, but you decide to save it for something important.")}};;
let rec flyinghanky = Y {name = "flying hanky"; data = Art {adescL = "A hanky blows through the air just out of your reach."; adescI = "Hey! This is not supposed to be picked up. Cheater."; luse = (fun () -> let _ = addartifact "plaza" flyinghanky in let _ = deleteinv "flying hanky" in "You drop the flying hanky. Now do it right.")}};;


let dwarves = Y {name = "dwarves"; data = Cre {cdesc = "Two dwarves with growling stomachs guard the path to a mystical tree."; ctalk = (fun () -> "You shall not pass."); cdeath = (fun () -> let _ = goldchange 60 in let _ = addlink2 "garden" "tree" in "The path to the tree is no longer guarded."); catt = "hack at you with their axes"; cmaxhp = 30; cnowhp = 30; cdamage = 4; carmor = 2; cprops = []; hostile = false}};;
let innkeeper = Y {name = "innkeeper"; data = Cre {cdesc = "The innkeeper sits at a table, drinking a glass of milk.";  ctalk = (fun () -> "I only have one room left, but I can only give it to someone who brings me something from the mystic garden."); cdeath = (fun () -> let _ = goldchange 10 in let _ = addlink2 "inn" "room" in "You take the key to a room off of the corpse."); catt = "screams and slaps you"; cmaxhp = 15; cnowhp = 15; cdamage = 2; carmor = 0; cprops = []; hostile = false}};;
let thief = Y {name = "thief"; data = Cre {cdesc = "A short, gruff-looking, thief swears under his breath as you come into view."; ctalk = (fun () -> "Fuck you, magic user! You assholes are not worth shit."); cdeath = (fun () -> let _ = goldchange 20 in let _ = completequest "thieves" in "You taught that thief a lesson."); catt = "floats like a butterfly and stings like a bee"; cmaxhp = 20; cnowhp = 20; cdamage = 4; carmor = 1; cprops = []; hostile = false}};;
let damsel = Y {name = "damsel"; data = Cre {cdesc = "A damsel cries into her hands on a nearby bench."; ctalk = (fun () -> "That mean old wizard always grabs my butt. Please help me."); cdeath = (fun () -> let _ = addtoinv guilt in let _ = if checkquest "damsel" then addtoinv hanky else () in "You feel really guilty about killing that girl."); catt = "casts tear geyser at you"; cmaxhp = 5; cnowhp = 5; cdamage = 4; carmor = 0; cprops = []; hostile = false}};;
let fighter = Y {name = "fighter"; data = Cre {cdesc = "A tall fighter with blond hair polishes a shield with a blue pentagram painted on it."; ctalk = (fun () -> "Want to fight? My shield will reflect all your spells back at you! HA!"); cdeath = (fun () -> let _ = goldchange 50 in let _ = completequest "fighters" in let _ = addtoinv shield in "You taught that fighter a lesson. You take his shield."); catt = "stabs you with his sword"; cmaxhp = 24; cnowhp = 24; cdamage = 4; carmor = 2; cprops = [Reflect]; hostile = false}};;
let wizard = Y {name = "wizard"; data = Cre {cdesc = "An old wizard in a black cloak smokes in a corner.";  ctalk = (fun () -> let t = checkquest "thieves" and f = checkquest "fighters" in if f && t then "Good job! You have restored honor to our guild and have completed the main quest of the game. Feel free to play around more if you want to." else String.concat "" ["You must restore honor to our guild! Teach the other guilds to respect us. ";if f then "" else "The fighters think they can push us around. Their guild is in town. ";if t then "" else "The thieves show a more subtle disrespect. All our spells are based upon incantation: the power of words. The thieves not only have no respect for us, but no respect for language itself. They are hidden away in some dark corner of the forest. "]); cdeath = (fun () -> let _ = completequest "wizards" in let _ = completequest "get tip" in "I guess you are the dean now."); catt = "casts a fire spell at you"; cmaxhp = 35; cnowhp = 35; cdamage = 10; carmor = 3; cprops = []; hostile = false}};;
let goblin = Y {name = "goblin"; data = Cre {cdesc = "An evil-looking goblin licks his teeth at you.";  ctalk = (fun () -> "Die human!"); cdeath = (fun () -> let _ = goldchange 7 in "You killed a goblin and took its gold."); catt = "bites you"; cmaxhp = 5; cnowhp = 5; cdamage = 3; carmor = 1; cprops = []; hostile = true}};;
let bandit = Y {name = "bandit"; data = Cre {cdesc = "A bandit with a wooden club eyes your coin purse.";  ctalk = (fun () -> "Give me the money!"); cdeath = (fun () -> let _ = goldchange 16 in "You killed a bandit and took his gold."); catt = "hits your body with his club"; cmaxhp = 7; cnowhp = 7; cdamage = 3; carmor = 2; cprops = []; hostile = true}};;
let death = Y {name = "death"; data = Cre {cdesc = "The sinister red eyes of death watch you from beneath darkened hood.";  ctalk = (fun () -> "Hey, jerk. That skeleton you killed was my mom!"); cdeath = (fun () -> let _ = goldchange 20 in let _ = addtoinv scythe in "And with strange aeons even death may die. You take his scythe."); catt = "slashes deftly at you with its scythe"; cmaxhp = 14; cnowhp = 14; cdamage = 8; carmor = 0; cprops = []; hostile = false}};;
let skeleton = Y {name = "skeleton"; data = Cre {cdesc = "A skeleton rattles toward you.";  ctalk = (fun () -> "It says nothing."); cdeath = (fun () -> let _ = goldchange 3 in let _ = if checkquest "summon death" then () else addperson "plaza" death in let _ = completequest "summon death" in "You killed the skeleton."); catt = "skull butts you"; cmaxhp = 3; cnowhp = 3; cdamage = 2; carmor = 0; cprops = []; hostile = true}};;


let college = Y {name = "wizard college"; data = Loc {larts = []; lcres = [wizard]; ldesc1 = "The main hall of the wizard college is decked with tapestries and stained glass windows of wizards slaying monsters."; ldesc2 = ""; llinks = ["wizard quad"]; lenter = (fun () -> ())}};;
let garden = Y {name = "garden"; data = Loc {larts = []; lcres = [dwarves]; ldesc1 = "You are in a beautiful garden."; ldesc2 = ""; llinks = ["forest"]; lenter = (fun () -> ())}};;
let tree = Y {name = "tree"; data = Loc {larts = [fruit]; lcres = []; ldesc1 = "Birds sing from this majestic tree. The leaves seem to glow, but it may just be a trick of the light."; ldesc2 = "You feel at peace here."; llinks = []; lenter = (fun () -> ())}};;
let inn = Y {name = "inn"; data = Loc {larts = []; lcres = [innkeeper]; ldesc1 = "This is the only inn in town."; ldesc2 = "It seems to have no vacancy."; llinks = ["plaza"]; lenter = (fun () -> ())}};;
let room = Y {name = "room"; data = Loc {larts = [book; soap]; lcres = []; ldesc1 = "This room is really fancy. The bed is soft with goose down."; ldesc2 = "The walls block all outside sound."; llinks = []; lenter = (fun () -> ())}};;
let corner = Y {name = "thief corner"; data = Loc {larts = []; lcres = [thief]; ldesc1 = "This area is hidden in the forest."; ldesc2 = "There are dummies with bells and pockets standing around."; llinks = []; lenter = (fun () -> ())}};;
let guild = Y {name = "fighter guild"; data = Loc {larts = []; lcres = [fighter]; ldesc1 = "There are weapons, shields, and goblin heads hanging on the walls."; ldesc2 = "The center of the room is a big open space with circles painted on the floor. Cots and practice swords line the walls."; llinks = ["plaza"]; lenter = (fun () -> ())}};;
let forest = Y {name = "forest"; data = Loc {larts = []; lcres = []; ldesc1 = "The forest is dangerous."; ldesc2 = "Watch out for monsters!"; llinks = ["plaza"; "garden"; "wizard quad"]; lenter = (fun () -> let r = Random.int 20 in if r = 1 then addperson "forest" skeleton else if r = 2 then addperson "forest" goblin else if r = 3 then addperson "forest" bandit else () )}};;
let plaza = Y {name = "plaza"; data = Loc {larts = []; lcres = []; ldesc1 = "The town plaza is a happening place."; ldesc2 = "A few people mull about."; llinks = ["forest"; "inn"; "fighter guild";"town store";"magic store"]; lenter = (fun () -> ())}};;
let tstore = Y {name = "town store"; data = Sto {sales = [(net, 2, false);(goose, 9, false);(hpill, 1, true)]; slink = "plaza"}};;
let mstore = Y {name = "magic store"; data = Sto {sales = [(lfire, 25, false);(swave, 60, false);(dolittle, 20, false)]; slink = "plaza"}};;
let quad = Y {name = "wizard quad"; data = Loc {larts = [flyinghanky]; lcres = [damsel]; ldesc1 = "The wizard college quad is a place where students like the hang out and play magic frisbee."; ldesc2 = "Class buildings surround this open area."; llinks = ["forest"; "wizard college"]; lenter = (fun () -> ())}};;


let start () = game [college;garden;tree;inn;room;corner;guild;forest;plaza;tstore;mstore;quad] "wizard college" "Magic Users of Honor 1" ["fighters";"thieves";"wizards";"summon death";"get flute";"get tip";"damsel"] (Pla {pgold = 10; pcombat = {cdesc = ""; ctalk = (fun () -> ""); cdeath = (fun () -> ""); catt = "Punch Enemy"; cmaxhp = 18; cnowhp = 18; cdamage = 2; carmor = 0; cprops = []; hostile = false}; pinventory = []; pspellbook = [cball]});;

start ();;